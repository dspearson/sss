name: Build

on:
  push:
    branches: [ main, master, fix-github-builds ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      max-parallel: 1
      matrix:
        include:
          # Linux x86_64 (musl for static linking) - TESTING ONLY
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
            name: linux-x86_64

          # All other targets disabled for testing
          # - target: aarch64-unknown-linux-musl
          #   os: ubuntu-latest
          #   name: linux-aarch64
          # - target: armv7-unknown-linux-musleabihf
          #   os: ubuntu-latest
          #   name: linux-armv7
          # - target: x86_64-apple-darwin
          #   os: macos-latest
          #   name: macos-x86_64
          # - target: aarch64-apple-darwin
          #   os: macos-latest
          #   name: macos-aarch64
          # - target: x86_64-pc-windows-msvc
          #   os: windows-latest
          #   name: windows-x86_64
          #   ext: .exe

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install system dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config musl-tools
        # Install cross-compilation tools for ARM targets
        if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-musl" ]]; then
          sudo apt-get install -y gcc-aarch64-linux-gnu
        elif [[ "${{ matrix.target }}" == "armv7-unknown-linux-musleabihf" ]]; then
          sudo apt-get install -y gcc-arm-linux-gnueabihf
        fi
        # For musl targets
        if [[ "${{ matrix.target }}" == *"musl"* ]]; then
          sudo apt-get install -y musl-dev
        fi

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install pkg-config

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # libsodium-sys will handle Windows dependencies automatically
        echo "Windows dependencies managed by libsodium-sys"

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.target }}

    - name: Set environment variables for cross-compilation (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-musl" ]]; then
          echo "CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "TARGET_CC=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
        elif [[ "${{ matrix.target }}" == "armv7-unknown-linux-musleabihf" ]]; then
          echo "CC=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
          echo "TARGET_CC=arm-linux-gnueabihf-gcc" >> $GITHUB_ENV
        fi

    - name: Build binary
      uses: houseabsolute/actions-rust-cross@v1
      env:
        SODIUM_USE_PKG_CONFIG: "0"
        RUSTFLAGS: ${{ contains(matrix.target, 'musl') && '-C target-feature=+crt-static' || '' }}
      with:
        command: build
        target: ${{ matrix.target }}
        args: "--release"
        strip: true

    - name: Rename binary (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/sss sss-${{ matrix.name }}
        cp target/${{ matrix.target }}/release/sss ssse-${{ matrix.name }}

    - name: Rename binary (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cp target/${{ matrix.target }}/release/sss.exe sss-${{ matrix.name }}.exe
        cp target/${{ matrix.target }}/release/sss.exe ssse-${{ matrix.name }}.exe

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: binaries-${{ matrix.name }}
        path: |
          sss-${{ matrix.name }}${{ matrix.ext }}
          ssse-${{ matrix.name }}${{ matrix.ext }}
        retention-days: 30